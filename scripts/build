#!/usr/bin/env bash
set -e

# These are the platforms we will build
PLATFORMS="linux/amd64 linux/arm windows/amd64 darwin/amd64"

# Check our dependencies and setup our environment
for d in go zip git; do
    if ! which $d &> /dev/null ; then
        echo "$d missing"
        exit 1
    fi
done
mkdir -p build
if [ -z "$TRAVIS_BUILD_DIR" ] ; then
    SCRIPTDIR=$( cd ${0%/*} && pwd)
    ROOTDIR="${SCRIPTDIR%/*}"
else
    ROOTDIR="$TRAVIS_BUILD_DIR"
fi

# Figure out our current version Include prebuild deets if
# this is not a tagged commit
if git describe --tags --exact-match HEAD &> /dev/null ; then
    AVAKAS_ARGS=""
else
    AVAKAS_ARGS="--pre-build"
fi
# If avakas is installed locally, use that
if which avakas &> /dev/null ; then
    VSN=$(avakas show "$ROOTDIR" "$AVAKAS_ARGS")
else
    # If avakas is not installed, we need docker
    # This covers the travis-ci use case
    if which docker &> /dev/null ; then
        VSN=$(docker run -v "${ROOTDIR}:/app" otakup0pe/avakas show /app "$AVAKAS_ARGS")
    else
        echo "Unable to determine version"
        exit 1
    fi
fi

# for each platform, generate a named zip file
# containing a single consistently named executable
for p in $PLATFORMS ; do
    OS=$(cut -f 1 -d '/' <<< "$p")
    ARCH=$(cut -f 2 -d '/' <<< "$p")
    echo "Building for ${OS} ${ARCH}"
    DEST="lachash-${OS}-${ARCH}"
    DEST_SUFFIX=""
    Z_DEST="${DEST}.zip"
    # Windows needs this extension
    if [ "$OS" == "windows" ] ; then
        DEST_SUFFIX=".exe"
    fi
    cmd=(go build -o "build/${DEST}${DEST_SUFFIX}" -ldflags "-X main.lachash_version=${VSN}")
    cd "$ROOTDIR"
    # Compile the ARM we want
    if [ "$OS" == "linux" ] && [ "$ARCH" == "arm" ] ; then
        GOOS="$OS" GOARCH="$ARCH" GOARM=6 "${cmd[@]}"
    else
        GOOS="$OS" GOARCH="$ARCH" "${cmd[@]}"
    fi
    cd "${ROOTDIR}/build"
    [ -e "$Z_DEST" ] && rm "$Z_DEST"
    C_NAME="lachash${DEST_SUFFIX}"
    [ -e "$C_NAME" ] && rm "$C_NAME"
    cp "${DEST}${DEST_SUFFIX}" "$C_NAME"
    ZIP="${ROOTDIR}/build/${Z_DEST}"
    echo "wrote to $ZIP"
    zip -q "$ZIP" "$C_NAME"
    rm "$C_NAME"
done
